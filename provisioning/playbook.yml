---
- hosts: all
  gather_facts: yes
  sudo: yes

  vars_files:
    - vars/main.yml

  tasks:
    - name: Grabbing gradle repository
      apt_repository: repo='ppa:cwchien/gradle'

    - name: Grabbing nodejs repository
      apt_repository: repo='ppa:chris-lea/node.js'

    - name: Ensure apt cache is up to date
      apt: update_cache=yes

    - name: Ensure vim, git, java7, postgresql, gradle and nodejs are installed
      apt: name={{item}}
      sudo: yes
      with_items:
          - vim
          - git
          - openjdk-7-jdk
          - postgresql
          - postgresql-contrib
          - python-psycopg2
          - gradle
          - build-essential
          - nodejs

    - name: Install bower globally
      npm:
        name: bower
        global: yes
        state: present

    - name: Install grunt globally
      npm:
        name: grunt
        global: yes

    - name: Install grunt-cli globally
      npm:
        name: grunt-cli
        global: yes

    - name: Clear npm cache
      shell: npm cache clear --prefix /vagrant/ui/
    
    - name: Install ui packages
      shell: npm install --prefix /vagrant/ui/

    - name: Replace host file localhost mapping
      lineinfile:
        dest: /etc/hosts
        regexp: '^127\.0\.0\.1'
        line: '0.0.0.0 localhost'

    - name: Add aliases to system
      lineinfile:
        dest: /home/vagrant/.bashrc
        line: '{{item}}'
      with_items:
        - alias lapi='cd {{shared}}/api'
        - alias lui='cd {{shared}}/ui'


- hosts: all
  sudo: yes
  sudo_user: postgres
  gather_facts: no

  vars_files:
    - vars/main.yml

  tasks:
    - name: Ensure development database is created
      postgresql_db: name={{pg_db_name}}

    - name: Ensure test database is created
      postgresql_db: name={{pg_test_db_name}}

    - name: Ensure user has access to development database
      postgresql_user: db={{pg_db_name}} name={{pg_admin_user}} password={{pg_db_password}} priv=ALL

    - name: Ensure user has access to test database
      postgresql_user: db={{pg_test_db_name}} name={{pg_admin_user}} password={{pg_db_password}} priv=ALL

    - name: Ensure user does not have unnecessary privilege
      postgresql_user: name={{pg_admin_user}} role_attr_flags=NOSUPERUSER,NOCREATEDB

    - name: Change access rights for postgresql
      lineinfile:
        dest: /etc/postgresql/9.3/main/pg_hba.conf
        regexp: '^local\s+all\s+all\s+peer$'
        line: 'local    all             all                                    trust'

    - name: Change access rights for connection to postgresql
      lineinfile:
        dest: /etc/postgresql/9.3/main/pg_hba.conf
        line: 'host    all             all            10.0.2.15/32               trust'

    - name: Restart postgresql
      command: service postgresql restart
